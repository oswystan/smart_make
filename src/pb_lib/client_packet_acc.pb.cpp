// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: client_packet_acc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "client_packet_acc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ClientLbsAccPacket {
class ConnetLbs_C2SDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConnetLbs_C2S>
     _instance;
} _ConnetLbs_C2S_default_instance_;
class ServerInfoDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ServerInfo>
     _instance;
} _ServerInfo_default_instance_;
class ConnetLbs_S2CDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<ConnetLbs_S2C>
     _instance;
} _ConnetLbs_S2C_default_instance_;
class LbsGetAcclist_C2SDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LbsGetAcclist_C2S>
     _instance;
} _LbsGetAcclist_C2S_default_instance_;
class LbsGetAcclist_S2CDefaultTypeInternal {
public:
 ::google::protobuf::internal::ExplicitlyConstructed<LbsGetAcclist_S2C>
     _instance;
} _LbsGetAcclist_S2C_default_instance_;

namespace protobuf_client_5fpacket_5facc_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
  { NULL, NULL, 0, -1, -1, -1, -1, NULL, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnetLbs_C2S, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnetLbs_C2S, vec_server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnetLbs_C2S, is_manual_set_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnetLbs_C2S, isp_idx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnetLbs_C2S, location_code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ServerInfo, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnetLbs_S2C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnetLbs_S2C, rsp_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ConnetLbs_S2C, server_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsGetAcclist_C2S, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsGetAcclist_C2S, ip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsGetAcclist_S2C, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsGetAcclist_S2C, rsp_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LbsGetAcclist_S2C, server_info_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(ConnetLbs_C2S)},
  { 9, -1, sizeof(ServerInfo)},
  { 16, -1, sizeof(ConnetLbs_S2C)},
  { 23, -1, sizeof(LbsGetAcclist_C2S)},
  { 29, -1, sizeof(LbsGetAcclist_S2C)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConnetLbs_C2S_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ServerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ConnetLbs_S2C_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsGetAcclist_C2S_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LbsGetAcclist_S2C_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "client_packet_acc.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ConnetLbs_C2S_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConnetLbs_C2S_default_instance_);_ServerInfo_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ServerInfo_default_instance_);_ConnetLbs_S2C_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_ConnetLbs_S2C_default_instance_);_LbsGetAcclist_C2S_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LbsGetAcclist_C2S_default_instance_);_LbsGetAcclist_S2C_default_instance_._instance.DefaultConstruct();
  ::google::protobuf::internal::OnShutdownDestroyMessage(
      &_LbsGetAcclist_S2C_default_instance_);}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027client_packet_acc.proto\022\022ClientLbsAccP"
      "acket\"e\n\rConnetLbs_C2S\022\025\n\rvec_server_ip\030"
      "\001 \003(\005\022\025\n\ris_manual_set\030\002 \001(\005\022\017\n\007isp_idx\030"
      "\003 \001(\005\022\025\n\rlocation_code\030\004 \001(\003\"&\n\nServerIn"
      "fo\022\n\n\002ip\030\001 \001(\005\022\014\n\004port\030\002 \003(\005\"V\n\rConnetLb"
      "s_S2C\022\020\n\010rsp_code\030\001 \001(\005\0223\n\013server_info\030\002"
      " \003(\0132\036.ClientLbsAccPacket.ServerInfo\"\037\n\021"
      "LbsGetAcclist_C2S\022\n\n\002ip\030\001 \001(\005\"Z\n\021LbsGetA"
      "cclist_S2C\022\020\n\010rsp_code\030\001 \001(\005\0223\n\013server_i"
      "nfo\030\002 \003(\0132\036.ClientLbsAccPacket.ServerInf"
      "ob\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 409);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "client_packet_acc.proto", &protobuf_RegisterTypes);
}
} // anonymous namespace

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_client_5fpacket_5facc_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnetLbs_C2S::kVecServerIpFieldNumber;
const int ConnetLbs_C2S::kIsManualSetFieldNumber;
const int ConnetLbs_C2S::kIspIdxFieldNumber;
const int ConnetLbs_C2S::kLocationCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnetLbs_C2S::ConnetLbs_C2S()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientLbsAccPacket.ConnetLbs_C2S)
}
ConnetLbs_C2S::ConnetLbs_C2S(const ConnetLbs_C2S& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vec_server_ip_(from.vec_server_ip_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_manual_set_, &from.is_manual_set_,
    static_cast<size_t>(reinterpret_cast<char*>(&location_code_) -
    reinterpret_cast<char*>(&is_manual_set_)) + sizeof(location_code_));
  // @@protoc_insertion_point(copy_constructor:ClientLbsAccPacket.ConnetLbs_C2S)
}

void ConnetLbs_C2S::SharedCtor() {
  ::memset(&is_manual_set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&location_code_) -
      reinterpret_cast<char*>(&is_manual_set_)) + sizeof(location_code_));
  _cached_size_ = 0;
}

ConnetLbs_C2S::~ConnetLbs_C2S() {
  // @@protoc_insertion_point(destructor:ClientLbsAccPacket.ConnetLbs_C2S)
  SharedDtor();
}

void ConnetLbs_C2S::SharedDtor() {
}

void ConnetLbs_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnetLbs_C2S::descriptor() {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnetLbs_C2S& ConnetLbs_C2S::default_instance() {
  protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConnetLbs_C2S* ConnetLbs_C2S::New(::google::protobuf::Arena* arena) const {
  ConnetLbs_C2S* n = new ConnetLbs_C2S;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnetLbs_C2S::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientLbsAccPacket.ConnetLbs_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vec_server_ip_.Clear();
  ::memset(&is_manual_set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&location_code_) -
      reinterpret_cast<char*>(&is_manual_set_)) + sizeof(location_code_));
  _internal_metadata_.Clear();
}

bool ConnetLbs_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientLbsAccPacket.ConnetLbs_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 vec_server_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_vec_server_ip())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_vec_server_ip())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 is_manual_set = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &is_manual_set_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 isp_idx = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isp_idx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 location_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &location_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientLbsAccPacket.ConnetLbs_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientLbsAccPacket.ConnetLbs_C2S)
  return false;
#undef DO_
}

void ConnetLbs_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientLbsAccPacket.ConnetLbs_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 vec_server_ip = 1;
  if (this->vec_server_ip_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _vec_server_ip_cached_byte_size_));
  }
  for (int i = 0, n = this->vec_server_ip_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->vec_server_ip(i), output);
  }

  // int32 is_manual_set = 2;
  if (this->is_manual_set() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->is_manual_set(), output);
  }

  // int32 isp_idx = 3;
  if (this->isp_idx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->isp_idx(), output);
  }

  // int64 location_code = 4;
  if (this->location_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->location_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientLbsAccPacket.ConnetLbs_C2S)
}

::google::protobuf::uint8* ConnetLbs_C2S::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientLbsAccPacket.ConnetLbs_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 vec_server_ip = 1;
  if (this->vec_server_ip_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _vec_server_ip_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->vec_server_ip_, target);
  }

  // int32 is_manual_set = 2;
  if (this->is_manual_set() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->is_manual_set(), target);
  }

  // int32 isp_idx = 3;
  if (this->isp_idx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->isp_idx(), target);
  }

  // int64 location_code = 4;
  if (this->location_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->location_code(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientLbsAccPacket.ConnetLbs_C2S)
  return target;
}

size_t ConnetLbs_C2S::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientLbsAccPacket.ConnetLbs_C2S)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 vec_server_ip = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->vec_server_ip_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vec_server_ip_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 is_manual_set = 2;
  if (this->is_manual_set() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->is_manual_set());
  }

  // int32 isp_idx = 3;
  if (this->isp_idx() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->isp_idx());
  }

  // int64 location_code = 4;
  if (this->location_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->location_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnetLbs_C2S::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientLbsAccPacket.ConnetLbs_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnetLbs_C2S* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnetLbs_C2S>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientLbsAccPacket.ConnetLbs_C2S)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientLbsAccPacket.ConnetLbs_C2S)
    MergeFrom(*source);
  }
}

void ConnetLbs_C2S::MergeFrom(const ConnetLbs_C2S& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientLbsAccPacket.ConnetLbs_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vec_server_ip_.MergeFrom(from.vec_server_ip_);
  if (from.is_manual_set() != 0) {
    set_is_manual_set(from.is_manual_set());
  }
  if (from.isp_idx() != 0) {
    set_isp_idx(from.isp_idx());
  }
  if (from.location_code() != 0) {
    set_location_code(from.location_code());
  }
}

void ConnetLbs_C2S::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientLbsAccPacket.ConnetLbs_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnetLbs_C2S::CopyFrom(const ConnetLbs_C2S& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientLbsAccPacket.ConnetLbs_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnetLbs_C2S::IsInitialized() const {
  return true;
}

void ConnetLbs_C2S::Swap(ConnetLbs_C2S* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnetLbs_C2S::InternalSwap(ConnetLbs_C2S* other) {
  using std::swap;
  vec_server_ip_.InternalSwap(&other->vec_server_ip_);
  swap(is_manual_set_, other->is_manual_set_);
  swap(isp_idx_, other->isp_idx_);
  swap(location_code_, other->location_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnetLbs_C2S::GetMetadata() const {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnetLbs_C2S

// repeated int32 vec_server_ip = 1;
int ConnetLbs_C2S::vec_server_ip_size() const {
  return vec_server_ip_.size();
}
void ConnetLbs_C2S::clear_vec_server_ip() {
  vec_server_ip_.Clear();
}
::google::protobuf::int32 ConnetLbs_C2S::vec_server_ip(int index) const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.ConnetLbs_C2S.vec_server_ip)
  return vec_server_ip_.Get(index);
}
void ConnetLbs_C2S::set_vec_server_ip(int index, ::google::protobuf::int32 value) {
  vec_server_ip_.Set(index, value);
  // @@protoc_insertion_point(field_set:ClientLbsAccPacket.ConnetLbs_C2S.vec_server_ip)
}
void ConnetLbs_C2S::add_vec_server_ip(::google::protobuf::int32 value) {
  vec_server_ip_.Add(value);
  // @@protoc_insertion_point(field_add:ClientLbsAccPacket.ConnetLbs_C2S.vec_server_ip)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ConnetLbs_C2S::vec_server_ip() const {
  // @@protoc_insertion_point(field_list:ClientLbsAccPacket.ConnetLbs_C2S.vec_server_ip)
  return vec_server_ip_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ConnetLbs_C2S::mutable_vec_server_ip() {
  // @@protoc_insertion_point(field_mutable_list:ClientLbsAccPacket.ConnetLbs_C2S.vec_server_ip)
  return &vec_server_ip_;
}

// int32 is_manual_set = 2;
void ConnetLbs_C2S::clear_is_manual_set() {
  is_manual_set_ = 0;
}
::google::protobuf::int32 ConnetLbs_C2S::is_manual_set() const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.ConnetLbs_C2S.is_manual_set)
  return is_manual_set_;
}
void ConnetLbs_C2S::set_is_manual_set(::google::protobuf::int32 value) {
  
  is_manual_set_ = value;
  // @@protoc_insertion_point(field_set:ClientLbsAccPacket.ConnetLbs_C2S.is_manual_set)
}

// int32 isp_idx = 3;
void ConnetLbs_C2S::clear_isp_idx() {
  isp_idx_ = 0;
}
::google::protobuf::int32 ConnetLbs_C2S::isp_idx() const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.ConnetLbs_C2S.isp_idx)
  return isp_idx_;
}
void ConnetLbs_C2S::set_isp_idx(::google::protobuf::int32 value) {
  
  isp_idx_ = value;
  // @@protoc_insertion_point(field_set:ClientLbsAccPacket.ConnetLbs_C2S.isp_idx)
}

// int64 location_code = 4;
void ConnetLbs_C2S::clear_location_code() {
  location_code_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 ConnetLbs_C2S::location_code() const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.ConnetLbs_C2S.location_code)
  return location_code_;
}
void ConnetLbs_C2S::set_location_code(::google::protobuf::int64 value) {
  
  location_code_ = value;
  // @@protoc_insertion_point(field_set:ClientLbsAccPacket.ConnetLbs_C2S.location_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerInfo::kIpFieldNumber;
const int ServerInfo::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerInfo::ServerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientLbsAccPacket.ServerInfo)
}
ServerInfo::ServerInfo(const ServerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      port_(from.port_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_ = from.ip_;
  // @@protoc_insertion_point(copy_constructor:ClientLbsAccPacket.ServerInfo)
}

void ServerInfo::SharedCtor() {
  ip_ = 0;
  _cached_size_ = 0;
}

ServerInfo::~ServerInfo() {
  // @@protoc_insertion_point(destructor:ClientLbsAccPacket.ServerInfo)
  SharedDtor();
}

void ServerInfo::SharedDtor() {
}

void ServerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerInfo::descriptor() {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerInfo& ServerInfo::default_instance() {
  protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ServerInfo* ServerInfo::New(::google::protobuf::Arena* arena) const {
  ServerInfo* n = new ServerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ServerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientLbsAccPacket.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  port_.Clear();
  ip_ = 0;
  _internal_metadata_.Clear();
}

bool ServerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientLbsAccPacket.ServerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_port())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 18u, input, this->mutable_port())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientLbsAccPacket.ServerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientLbsAccPacket.ServerInfo)
  return false;
#undef DO_
}

void ServerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientLbsAccPacket.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ip = 1;
  if (this->ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ip(), output);
  }

  // repeated int32 port = 2;
  if (this->port_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _port_cached_byte_size_));
  }
  for (int i = 0, n = this->port_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->port(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientLbsAccPacket.ServerInfo)
}

::google::protobuf::uint8* ServerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientLbsAccPacket.ServerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ip = 1;
  if (this->ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ip(), target);
  }

  // repeated int32 port = 2;
  if (this->port_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::uint32>(
            _port_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->port_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientLbsAccPacket.ServerInfo)
  return target;
}

size_t ServerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientLbsAccPacket.ServerInfo)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 port = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->port_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _port_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // int32 ip = 1;
  if (this->ip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientLbsAccPacket.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientLbsAccPacket.ServerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientLbsAccPacket.ServerInfo)
    MergeFrom(*source);
  }
}

void ServerInfo::MergeFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientLbsAccPacket.ServerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  port_.MergeFrom(from.port_);
  if (from.ip() != 0) {
    set_ip(from.ip());
  }
}

void ServerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientLbsAccPacket.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerInfo::CopyFrom(const ServerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientLbsAccPacket.ServerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerInfo::IsInitialized() const {
  return true;
}

void ServerInfo::Swap(ServerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerInfo::InternalSwap(ServerInfo* other) {
  using std::swap;
  port_.InternalSwap(&other->port_);
  swap(ip_, other->ip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerInfo::GetMetadata() const {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ServerInfo

// int32 ip = 1;
void ServerInfo::clear_ip() {
  ip_ = 0;
}
::google::protobuf::int32 ServerInfo::ip() const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.ServerInfo.ip)
  return ip_;
}
void ServerInfo::set_ip(::google::protobuf::int32 value) {
  
  ip_ = value;
  // @@protoc_insertion_point(field_set:ClientLbsAccPacket.ServerInfo.ip)
}

// repeated int32 port = 2;
int ServerInfo::port_size() const {
  return port_.size();
}
void ServerInfo::clear_port() {
  port_.Clear();
}
::google::protobuf::int32 ServerInfo::port(int index) const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.ServerInfo.port)
  return port_.Get(index);
}
void ServerInfo::set_port(int index, ::google::protobuf::int32 value) {
  port_.Set(index, value);
  // @@protoc_insertion_point(field_set:ClientLbsAccPacket.ServerInfo.port)
}
void ServerInfo::add_port(::google::protobuf::int32 value) {
  port_.Add(value);
  // @@protoc_insertion_point(field_add:ClientLbsAccPacket.ServerInfo.port)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ServerInfo::port() const {
  // @@protoc_insertion_point(field_list:ClientLbsAccPacket.ServerInfo.port)
  return port_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ServerInfo::mutable_port() {
  // @@protoc_insertion_point(field_mutable_list:ClientLbsAccPacket.ServerInfo.port)
  return &port_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConnetLbs_S2C::kRspCodeFieldNumber;
const int ConnetLbs_S2C::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConnetLbs_S2C::ConnetLbs_S2C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientLbsAccPacket.ConnetLbs_S2C)
}
ConnetLbs_S2C::ConnetLbs_S2C(const ConnetLbs_S2C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      server_info_(from.server_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rsp_code_ = from.rsp_code_;
  // @@protoc_insertion_point(copy_constructor:ClientLbsAccPacket.ConnetLbs_S2C)
}

void ConnetLbs_S2C::SharedCtor() {
  rsp_code_ = 0;
  _cached_size_ = 0;
}

ConnetLbs_S2C::~ConnetLbs_S2C() {
  // @@protoc_insertion_point(destructor:ClientLbsAccPacket.ConnetLbs_S2C)
  SharedDtor();
}

void ConnetLbs_S2C::SharedDtor() {
}

void ConnetLbs_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ConnetLbs_S2C::descriptor() {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConnetLbs_S2C& ConnetLbs_S2C::default_instance() {
  protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  return *internal_default_instance();
}

ConnetLbs_S2C* ConnetLbs_S2C::New(::google::protobuf::Arena* arena) const {
  ConnetLbs_S2C* n = new ConnetLbs_S2C;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ConnetLbs_S2C::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientLbsAccPacket.ConnetLbs_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_info_.Clear();
  rsp_code_ = 0;
  _internal_metadata_.Clear();
}

bool ConnetLbs_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientLbsAccPacket.ConnetLbs_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rsp_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rsp_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientLbsAccPacket.ConnetLbs_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientLbsAccPacket.ConnetLbs_S2C)
  return false;
#undef DO_
}

void ConnetLbs_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientLbsAccPacket.ConnetLbs_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rsp_code = 1;
  if (this->rsp_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rsp_code(), output);
  }

  // repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->server_info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientLbsAccPacket.ConnetLbs_S2C)
}

::google::protobuf::uint8* ConnetLbs_S2C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientLbsAccPacket.ConnetLbs_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rsp_code = 1;
  if (this->rsp_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rsp_code(), target);
  }

  // repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->server_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientLbsAccPacket.ConnetLbs_S2C)
  return target;
}

size_t ConnetLbs_S2C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientLbsAccPacket.ConnetLbs_S2C)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->server_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_info(static_cast<int>(i)));
    }
  }

  // int32 rsp_code = 1;
  if (this->rsp_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rsp_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ConnetLbs_S2C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientLbsAccPacket.ConnetLbs_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  const ConnetLbs_S2C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConnetLbs_S2C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientLbsAccPacket.ConnetLbs_S2C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientLbsAccPacket.ConnetLbs_S2C)
    MergeFrom(*source);
  }
}

void ConnetLbs_S2C::MergeFrom(const ConnetLbs_S2C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientLbsAccPacket.ConnetLbs_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_info_.MergeFrom(from.server_info_);
  if (from.rsp_code() != 0) {
    set_rsp_code(from.rsp_code());
  }
}

void ConnetLbs_S2C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientLbsAccPacket.ConnetLbs_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConnetLbs_S2C::CopyFrom(const ConnetLbs_S2C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientLbsAccPacket.ConnetLbs_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConnetLbs_S2C::IsInitialized() const {
  return true;
}

void ConnetLbs_S2C::Swap(ConnetLbs_S2C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConnetLbs_S2C::InternalSwap(ConnetLbs_S2C* other) {
  using std::swap;
  server_info_.InternalSwap(&other->server_info_);
  swap(rsp_code_, other->rsp_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ConnetLbs_S2C::GetMetadata() const {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ConnetLbs_S2C

// int32 rsp_code = 1;
void ConnetLbs_S2C::clear_rsp_code() {
  rsp_code_ = 0;
}
::google::protobuf::int32 ConnetLbs_S2C::rsp_code() const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.ConnetLbs_S2C.rsp_code)
  return rsp_code_;
}
void ConnetLbs_S2C::set_rsp_code(::google::protobuf::int32 value) {
  
  rsp_code_ = value;
  // @@protoc_insertion_point(field_set:ClientLbsAccPacket.ConnetLbs_S2C.rsp_code)
}

// repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
int ConnetLbs_S2C::server_info_size() const {
  return server_info_.size();
}
void ConnetLbs_S2C::clear_server_info() {
  server_info_.Clear();
}
const ::ClientLbsAccPacket::ServerInfo& ConnetLbs_S2C::server_info(int index) const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.ConnetLbs_S2C.server_info)
  return server_info_.Get(index);
}
::ClientLbsAccPacket::ServerInfo* ConnetLbs_S2C::mutable_server_info(int index) {
  // @@protoc_insertion_point(field_mutable:ClientLbsAccPacket.ConnetLbs_S2C.server_info)
  return server_info_.Mutable(index);
}
::ClientLbsAccPacket::ServerInfo* ConnetLbs_S2C::add_server_info() {
  // @@protoc_insertion_point(field_add:ClientLbsAccPacket.ConnetLbs_S2C.server_info)
  return server_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::ClientLbsAccPacket::ServerInfo >*
ConnetLbs_S2C::mutable_server_info() {
  // @@protoc_insertion_point(field_mutable_list:ClientLbsAccPacket.ConnetLbs_S2C.server_info)
  return &server_info_;
}
const ::google::protobuf::RepeatedPtrField< ::ClientLbsAccPacket::ServerInfo >&
ConnetLbs_S2C::server_info() const {
  // @@protoc_insertion_point(field_list:ClientLbsAccPacket.ConnetLbs_S2C.server_info)
  return server_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsGetAcclist_C2S::kIpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsGetAcclist_C2S::LbsGetAcclist_C2S()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientLbsAccPacket.LbsGetAcclist_C2S)
}
LbsGetAcclist_C2S::LbsGetAcclist_C2S(const LbsGetAcclist_C2S& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_ = from.ip_;
  // @@protoc_insertion_point(copy_constructor:ClientLbsAccPacket.LbsGetAcclist_C2S)
}

void LbsGetAcclist_C2S::SharedCtor() {
  ip_ = 0;
  _cached_size_ = 0;
}

LbsGetAcclist_C2S::~LbsGetAcclist_C2S() {
  // @@protoc_insertion_point(destructor:ClientLbsAccPacket.LbsGetAcclist_C2S)
  SharedDtor();
}

void LbsGetAcclist_C2S::SharedDtor() {
}

void LbsGetAcclist_C2S::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsGetAcclist_C2S::descriptor() {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsGetAcclist_C2S& LbsGetAcclist_C2S::default_instance() {
  protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsGetAcclist_C2S* LbsGetAcclist_C2S::New(::google::protobuf::Arena* arena) const {
  LbsGetAcclist_C2S* n = new LbsGetAcclist_C2S;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsGetAcclist_C2S::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientLbsAccPacket.LbsGetAcclist_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_ = 0;
  _internal_metadata_.Clear();
}

bool LbsGetAcclist_C2S::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientLbsAccPacket.LbsGetAcclist_C2S)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientLbsAccPacket.LbsGetAcclist_C2S)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientLbsAccPacket.LbsGetAcclist_C2S)
  return false;
#undef DO_
}

void LbsGetAcclist_C2S::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientLbsAccPacket.LbsGetAcclist_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ip = 1;
  if (this->ip() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->ip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientLbsAccPacket.LbsGetAcclist_C2S)
}

::google::protobuf::uint8* LbsGetAcclist_C2S::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientLbsAccPacket.LbsGetAcclist_C2S)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 ip = 1;
  if (this->ip() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->ip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientLbsAccPacket.LbsGetAcclist_C2S)
  return target;
}

size_t LbsGetAcclist_C2S::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientLbsAccPacket.LbsGetAcclist_C2S)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 ip = 1;
  if (this->ip() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsGetAcclist_C2S::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientLbsAccPacket.LbsGetAcclist_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsGetAcclist_C2S* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsGetAcclist_C2S>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientLbsAccPacket.LbsGetAcclist_C2S)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientLbsAccPacket.LbsGetAcclist_C2S)
    MergeFrom(*source);
  }
}

void LbsGetAcclist_C2S::MergeFrom(const LbsGetAcclist_C2S& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientLbsAccPacket.LbsGetAcclist_C2S)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip() != 0) {
    set_ip(from.ip());
  }
}

void LbsGetAcclist_C2S::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientLbsAccPacket.LbsGetAcclist_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsGetAcclist_C2S::CopyFrom(const LbsGetAcclist_C2S& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientLbsAccPacket.LbsGetAcclist_C2S)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsGetAcclist_C2S::IsInitialized() const {
  return true;
}

void LbsGetAcclist_C2S::Swap(LbsGetAcclist_C2S* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsGetAcclist_C2S::InternalSwap(LbsGetAcclist_C2S* other) {
  using std::swap;
  swap(ip_, other->ip_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsGetAcclist_C2S::GetMetadata() const {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsGetAcclist_C2S

// int32 ip = 1;
void LbsGetAcclist_C2S::clear_ip() {
  ip_ = 0;
}
::google::protobuf::int32 LbsGetAcclist_C2S::ip() const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.LbsGetAcclist_C2S.ip)
  return ip_;
}
void LbsGetAcclist_C2S::set_ip(::google::protobuf::int32 value) {
  
  ip_ = value;
  // @@protoc_insertion_point(field_set:ClientLbsAccPacket.LbsGetAcclist_C2S.ip)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LbsGetAcclist_S2C::kRspCodeFieldNumber;
const int LbsGetAcclist_S2C::kServerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LbsGetAcclist_S2C::LbsGetAcclist_S2C()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientLbsAccPacket.LbsGetAcclist_S2C)
}
LbsGetAcclist_S2C::LbsGetAcclist_S2C(const LbsGetAcclist_S2C& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      server_info_(from.server_info_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rsp_code_ = from.rsp_code_;
  // @@protoc_insertion_point(copy_constructor:ClientLbsAccPacket.LbsGetAcclist_S2C)
}

void LbsGetAcclist_S2C::SharedCtor() {
  rsp_code_ = 0;
  _cached_size_ = 0;
}

LbsGetAcclist_S2C::~LbsGetAcclist_S2C() {
  // @@protoc_insertion_point(destructor:ClientLbsAccPacket.LbsGetAcclist_S2C)
  SharedDtor();
}

void LbsGetAcclist_S2C::SharedDtor() {
}

void LbsGetAcclist_S2C::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LbsGetAcclist_S2C::descriptor() {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LbsGetAcclist_S2C& LbsGetAcclist_S2C::default_instance() {
  protobuf_client_5fpacket_5facc_2eproto::InitDefaults();
  return *internal_default_instance();
}

LbsGetAcclist_S2C* LbsGetAcclist_S2C::New(::google::protobuf::Arena* arena) const {
  LbsGetAcclist_S2C* n = new LbsGetAcclist_S2C;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LbsGetAcclist_S2C::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientLbsAccPacket.LbsGetAcclist_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  server_info_.Clear();
  rsp_code_ = 0;
  _internal_metadata_.Clear();
}

bool LbsGetAcclist_S2C::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientLbsAccPacket.LbsGetAcclist_S2C)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 rsp_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rsp_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_server_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientLbsAccPacket.LbsGetAcclist_S2C)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientLbsAccPacket.LbsGetAcclist_S2C)
  return false;
#undef DO_
}

void LbsGetAcclist_S2C::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientLbsAccPacket.LbsGetAcclist_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rsp_code = 1;
  if (this->rsp_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->rsp_code(), output);
  }

  // repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_info_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->server_info(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientLbsAccPacket.LbsGetAcclist_S2C)
}

::google::protobuf::uint8* LbsGetAcclist_S2C::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientLbsAccPacket.LbsGetAcclist_S2C)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 rsp_code = 1;
  if (this->rsp_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->rsp_code(), target);
  }

  // repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->server_info_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->server_info(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientLbsAccPacket.LbsGetAcclist_S2C)
  return target;
}

size_t LbsGetAcclist_S2C::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientLbsAccPacket.LbsGetAcclist_S2C)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->server_info_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->server_info(static_cast<int>(i)));
    }
  }

  // int32 rsp_code = 1;
  if (this->rsp_code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->rsp_code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LbsGetAcclist_S2C::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientLbsAccPacket.LbsGetAcclist_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  const LbsGetAcclist_S2C* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LbsGetAcclist_S2C>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientLbsAccPacket.LbsGetAcclist_S2C)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientLbsAccPacket.LbsGetAcclist_S2C)
    MergeFrom(*source);
  }
}

void LbsGetAcclist_S2C::MergeFrom(const LbsGetAcclist_S2C& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientLbsAccPacket.LbsGetAcclist_S2C)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  server_info_.MergeFrom(from.server_info_);
  if (from.rsp_code() != 0) {
    set_rsp_code(from.rsp_code());
  }
}

void LbsGetAcclist_S2C::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientLbsAccPacket.LbsGetAcclist_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LbsGetAcclist_S2C::CopyFrom(const LbsGetAcclist_S2C& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientLbsAccPacket.LbsGetAcclist_S2C)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LbsGetAcclist_S2C::IsInitialized() const {
  return true;
}

void LbsGetAcclist_S2C::Swap(LbsGetAcclist_S2C* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LbsGetAcclist_S2C::InternalSwap(LbsGetAcclist_S2C* other) {
  using std::swap;
  server_info_.InternalSwap(&other->server_info_);
  swap(rsp_code_, other->rsp_code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LbsGetAcclist_S2C::GetMetadata() const {
  protobuf_client_5fpacket_5facc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_client_5fpacket_5facc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LbsGetAcclist_S2C

// int32 rsp_code = 1;
void LbsGetAcclist_S2C::clear_rsp_code() {
  rsp_code_ = 0;
}
::google::protobuf::int32 LbsGetAcclist_S2C::rsp_code() const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.LbsGetAcclist_S2C.rsp_code)
  return rsp_code_;
}
void LbsGetAcclist_S2C::set_rsp_code(::google::protobuf::int32 value) {
  
  rsp_code_ = value;
  // @@protoc_insertion_point(field_set:ClientLbsAccPacket.LbsGetAcclist_S2C.rsp_code)
}

// repeated .ClientLbsAccPacket.ServerInfo server_info = 2;
int LbsGetAcclist_S2C::server_info_size() const {
  return server_info_.size();
}
void LbsGetAcclist_S2C::clear_server_info() {
  server_info_.Clear();
}
const ::ClientLbsAccPacket::ServerInfo& LbsGetAcclist_S2C::server_info(int index) const {
  // @@protoc_insertion_point(field_get:ClientLbsAccPacket.LbsGetAcclist_S2C.server_info)
  return server_info_.Get(index);
}
::ClientLbsAccPacket::ServerInfo* LbsGetAcclist_S2C::mutable_server_info(int index) {
  // @@protoc_insertion_point(field_mutable:ClientLbsAccPacket.LbsGetAcclist_S2C.server_info)
  return server_info_.Mutable(index);
}
::ClientLbsAccPacket::ServerInfo* LbsGetAcclist_S2C::add_server_info() {
  // @@protoc_insertion_point(field_add:ClientLbsAccPacket.LbsGetAcclist_S2C.server_info)
  return server_info_.Add();
}
::google::protobuf::RepeatedPtrField< ::ClientLbsAccPacket::ServerInfo >*
LbsGetAcclist_S2C::mutable_server_info() {
  // @@protoc_insertion_point(field_mutable_list:ClientLbsAccPacket.LbsGetAcclist_S2C.server_info)
  return &server_info_;
}
const ::google::protobuf::RepeatedPtrField< ::ClientLbsAccPacket::ServerInfo >&
LbsGetAcclist_S2C::server_info() const {
  // @@protoc_insertion_point(field_list:ClientLbsAccPacket.LbsGetAcclist_S2C.server_info)
  return server_info_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ClientLbsAccPacket

// @@protoc_insertion_point(global_scope)
